module Test.Basic.Data where

import Prelude

import Data.Either (fromRight)
import Data.Tuple (Tuple(..))
import Safe.Coerce (coerce)
import Sudoku.Common (Board, Puzzle, Cell(..))
import Sudoku.Format (parsePuzzle)

startingBoardString :: String
startingBoardString = """
  004 | 672 | 000
  500 | 800 | 096
  063 | 040 | 008
  ----+-----+----
  382 | 100 | 960
  475 | 000 | 100
  910 | 204 | 500
  ----+-----+----
  000 | 000 | 029
  001 | 000 | 743
  200 | 063 | 801
"""

notValidBoardString :: String
notValidBoardString = """
  004 | 672 | 000
  500 | 800 | 096
  063 | 040 | 008
  ----+-----+----
  382 | 106 | 960
  475 | 000 | 100
  910 | 204 | 500
  ----+-----+----
  000 | 000 | 029
  001 | 000 | 743
  200 | 063 | 801
"""

startingBoardSolvedString :: String
startingBoardSolvedString = """
  894 | 672 | 315
  527 | 831 | 496
  163 | 549 | 278
  ----+-----+----
  382 | 157 | 964
  475 | 396 | 182
  916 | 284 | 537
  ----+-----+----
  738 | 415 | 629
  651 | 928 | 743
  249 | 763 | 851
"""

startingBoardAlmostSolvedString :: String
startingBoardAlmostSolvedString = """
  894 | 6.2 | 315
  527 | 831 | 496
  163 | 549 | 278
  ----+-----+----
  382 | 157 | 964
  475 | 396 | 182
  916 | 284 | 537
  ----+-----+----
  738 | 415 | 629
  651 | 928 | 743
  249 | 763 | 851
"""

hardBoardString :: String
hardBoardString = """
  4.....8.5 .3....... ...7..... 
  .2.....6. ....8.4.. ....1.... 
  ...6.3.7. 5..2..... 1.4......
"""

hardBoardSolvedString :: String
hardBoardSolvedString = """
 417369825 632158947 958724316 
 825437169 791586432 346912758 
 289643571 573291684 164875293
"""

hardestBoardStringsX11 :: Array String
hardestBoardStringsX11 = 
  [ "85...24..72......9..4.........1.7..23.5...9...4...........8..7..17..........36.4."
  , "..53.....8......2..7..1.5..4....53...1..7...6..32...8..6.5....9..4....3......97.."
  , "12..4......5.69.1...9...5.........7.7...52.9..3......2.9.6...5.4..9..8.1..3...9.4"
  , "...57..3.1......2.7...234......8...4..7..4...49....6.5.42...3.....7..9....18....."
  , "7..1523........92....3.....1....47.8.......6............9...5.6.4.9.7...8....6.1."
  , "1....7.9..3..2...8..96..5....53..9...1..8...26....4...3......1..4......7..7...3.."
  , "1...34.8....8..5....4.6..21.18......3..1.2..6......81.52..7.9....6..9....9.64...2"
  , "...92......68.3...19..7...623..4.1....1...7....8.3..297...8..91...5.72......64..."
  , ".6.5.4.3.1...9...8.........9...5...6.4.6.2.7.7...4...5.........4...8...1.5.2.3.4."
  , "7.....4...2..7..8...3..8.799..5..3...6..2..9...1.97..6...3..9...3..4..6...9..1.35"
  , "....7..2.8.......6.1.2.5...9.54....8.........3....85.1...3.2.8.4.......9.7..6...."
  ]

easyBoardStringsX50 :: Array String
easyBoardStringsX50 = 
  [ "003020600900305001001806400008102900700000008006708200002609500800203009005010300"
  , "200080300060070084030500209000105408000000000402706000301007040720040060004010003"
  , "000000907000420180000705026100904000050000040000507009920108000034059000507000000"
  , "030050040008010500460000012070502080000603000040109030250000098001020600080060020"
  , "020810740700003100090002805009040087400208003160030200302700060005600008076051090"
  , "100920000524010000000000070050008102000000000402700090060000000000030945000071006"
  , "043080250600000000000001094900004070000608000010200003820500000000000005034090710"
  , "480006902002008001900370060840010200003704100001060049020085007700900600609200018"
  , "000900002050123400030000160908000000070000090000000205091000050007439020400007000"
  , "001900003900700160030005007050000009004302600200000070600100030042007006500006800"
  , "000125400008400000420800000030000095060902010510000060000003049000007200001298000"
  , "062340750100005600570000040000094800400000006005830000030000091006400007059083260"
  , "300000000005009000200504000020000700160000058704310600000890100000067080000005437"
  , "630000000000500008005674000000020000003401020000000345000007004080300902947100080"
  , "000020040008035000000070602031046970200000000000501203049000730000000010800004000"
  , "361025900080960010400000057008000471000603000259000800740000005020018060005470329"
  , "050807020600010090702540006070020301504000908103080070900076205060090003080103040"
  , "080005000000003457000070809060400903007010500408007020901020000842300000000100080"
  , "003502900000040000106000305900251008070408030800763001308000104000020000005104800"
  , "000000000009805100051907420290401065000000000140508093026709580005103600000000000"
  , "020030090000907000900208005004806500607000208003102900800605007000309000030020050"
  , "005000006070009020000500107804150000000803000000092805907006000030400010200000600"
  , "040000050001943600009000300600050002103000506800020007005000200002436700030000040"
  , "004000000000030002390700080400009001209801307600200008010008053900040000000000800"
  , "360020089000361000000000000803000602400603007607000108000000000000418000970030014"
  , "500400060009000800640020000000001008208000501700500000000090084003000600060003002"
  , "007256400400000005010030060000508000008060200000107000030070090200000004006312700"
  , "000000000079050180800000007007306800450708096003502700700000005016030420000000000"
  , "030000080009000500007509200700105008020090030900402001004207100002000800070000090"
  , "200170603050000100000006079000040700000801000009050000310400000005000060906037002"
  , "000000080800701040040020030374000900000030000005000321010060050050802006080000000"
  , "000000085000210009960080100500800016000000000890006007009070052300054000480000000"
  , "608070502050608070002000300500090006040302050800050003005000200010704090409060701"
  , "050010040107000602000905000208030501040070020901080406000401000304000709020060010"
  , "053000790009753400100000002090080010000907000080030070500000003007641200061000940"
  , "006080300049070250000405000600317004007000800100826009000702000075040190003090600"
  , "005080700700204005320000084060105040008000500070803010450000091600508007003010600"
  , "000900800128006400070800060800430007500000009600079008090004010003600284001007000"
  , "000080000270000054095000810009806400020403060006905100017000620460000038000090000"
  , "000602000400050001085010620038206710000000000019407350026040530900020007000809000"
  , "000900002050123400030000160908000000070000090000000205091000050007439020400007000"
  , "380000000000400785009020300060090000800302009000040070001070500495006000000000092"
  , "000158000002060800030000040027030510000000000046080790050000080004070100000325000"
  , "010500200900001000002008030500030007008000500600080004040100700000700006003004050"
  , "080000040000469000400000007005904600070608030008502100900000005000781000060000010"
  , "904200007010000000000706500000800090020904060040002000001607000000000030300005702"
  , "000700800006000031040002000024070000010030080000060290000800070860000500002006000"
  , "001007090590080001030000080000005800050060020004100000080000030100020079020700400"
  , "000003017015009008060000000100007000009000200000500004000000020500600340340200000"
  , "300200000000107000706030500070009080900020004010800050009040301000702000000008006"
  ]

{- Indices laid out for visual reference
0, 1, 2,   3, 4, 5,   6, 7, 8,
9, 10,11,  12,13,14,  15,16,17,
18,19,20,  21,22,23,  24,25,26,

27,28,29,  30,31,32,  33,34,35,
36,37,38,  39,40,41,  42,43,44,
45,46,47,  48,49,50,  51,52,53,

54,55,56,  57,58,59,  60,61,62,
63,64,65,  66,67,68,  69,70,71,
72,73,74,  75,76,77,  78,79,80
-}

startingBoard :: Board
startingBoard = coerce
  [ 511,511,8,32,64,2,511,511,511
  , 16,511,511,128,511,511,511,256,32
  , 511,32,4,511,8,511,511,511,128
  , 4,128,2,1,511,511,256,32,511
  , 8,64,16,511,511,511,1,511,511
  , 256,1,511,2,511,8,16,511,511
  , 511,511,511,511,511,511,511,2,256
  , 511,511,1,511,511,511,64,8,4
  , 2,511,511,511,32,4,128,511,1
  ]

startingBoard' :: Board
startingBoard' = coerce
  [ 509,509,8,32,64,2,509,509,509
  , 16,511,511,128,511,511,511,256,32
  , 511,32,4,511,8,511,511,511,128
  , 4,128,2,1,511,511,256,32,511
  , 8,64,16,511,511,511,1,511,511
  , 256,1,511,2,511,8,16,511,511
  , 511,511,511,511,511,511,511,2,256
  , 511,511,1,511,511,511,64,8,4
  , 2,511,511,511,32,4,128,511,1
  ]

dummyPuzzle :: Puzzle
dummyPuzzle = Tuple { metaData: {}, metaBoard: [] } $ coerce
  [ 1,1,1,1,1,1,1,1,1
  , 1,1,1,1,1,1,1,1,1
  , 1,1,1,1,1,1,1,1,1
  , 1,1,1,1,1,1,1,1,1
  , 1,1,1,1,1,1,1,1,1
  , 1,1,1,1,1,1,1,1,1
  , 1,1,1,1,1,1,1,1,1
  , 1,1,1,1,1,1,1,1,1
  , 1,1,1,1,1,1,1,1,1
  ]

startingPuzzle :: Puzzle
startingPuzzle = Tuple { metaData: {}, metaBoard: [] } startingBoard

startingPuzzle' :: Puzzle
startingPuzzle' = Tuple { metaData: {}, metaBoard: [] } startingBoard'

hardBoardPuzzle :: Puzzle
hardBoardPuzzle = fromRight dummyPuzzle $ parsePuzzle hardBoardString

startingBoardSolved :: Board
startingBoardSolved = coerce
  [ 128,256,8,32,64,2,4,1,16
  , 16,2,64,128,4,1,8,256,32
  , 1,32,4,16,8,256,2,64,128
  , 4,128,2,1,16,64,256,32,8
  , 8,64,16,4,256,32,1,128,2
  , 256,1,32,2,128,8,16,4,64
  , 64,4,128,8,1,16,32,2,256
  , 32,16,1,256,2,128,64,8,4
  , 2,8,256,64,32,4,128,16,1
  ]

badCellboard :: Board
badCellboard = coerce
  [ 511,511,8,32,64,2,511,511,511
  , 16,511,511,128,511,511,511,256,32
  , 511,32,4,511,8,511,511,511,128
  , 4,128,2,1,511,511,256,32,511
  , 8,64,16,511,511,512,1,511,511
  , 256,1,511,2,511,8,16,511,511
  , 511,511,511,511,511,511,511,2,256
  , 511,511,1,511,511,511,64,8,4
  , 2,511,511,511,32,4,128,511,1
  ]

badCellboard2 :: Board
badCellboard2 = coerce
  [ 511,511,8,32,64,2,511,511,511
  , 16,511,511,128,511,511,511,256,32
  , 511,32,4,511,8,511,511,511,128
  , 4,128,2,1,511,511,256,32,511
  , 8,64,16,511,511,0,1,511,511
  , 256,1,511,2,511,8,16,511,511
  , 511,511,511,511,511,511,511,2,256
  , 511,511,1,511,511,511,64,8,4
  , 2,511,511,511,32,4,128,511,1
  ]

forcedCellDuplicateBoard :: Board
forcedCellDuplicateBoard = coerce
  [ 256,511,8,32,64,2,511,511,511
  , 16,511,511,128,511,511,511,256,32
  , 511,32,4,511,8,511,511,511,128
  , 4,128,2,1,511,511,256,32,511
  , 8,64,16,511,511,511,1,511,511
  , 256,1,511,2,511,8,16,511,511
  , 511,511,511,511,511,511,511,2,256
  , 511,511,1,511,511,511,64,8,4
  , 2,511,511,511,32,4,128,511,1
  ]

forcedCellDuplicateBoard2 :: Board
forcedCellDuplicateBoard2 = coerce
  [ 511,511,8,32,64,2,511,511,511
  , 16,511,511,128,511,511,511,256,32
  , 511,32,4,511,8,511,511,511,128
  , 4,128,2,1,511,511,256,32,511
  , 8,64,16,511,511,511,1,16,511
  , 256,1,511,2,511,8,16,511,511
  , 511,511,511,511,511,511,511,2,256
  , 511,511,1,511,511,511,64,8,4
  , 2,511,511,511,32,4,128,511,1
  ]

nTupleDuplicateBoard :: Board
nTupleDuplicateBoard = coerce
  [ 511,511,8,32,64,2,511,511,511
  , 16,511,511,128,511,511,511,256,32
  , 511,32,4,511,8,511,511,511,128
  , 33,128,2,1,33,511,256,33,511
  , 8,64,16,511,511,511,1,511,511
  , 256,1,511,2,511,8,16,511,511
  , 511,511,511,511,511,511,511,2,256
  , 511,511,1,511,511,511,64,8,4
  , 2,511,511,511,32,4,128,511,1
  ]